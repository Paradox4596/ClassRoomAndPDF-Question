12.다음과 같이 출력하세요.
1
12
123
1234
12345

----------------------------------------------------------------------------

#include <iostream>

int main()
{
  int n{5};

  for (int i = 0; i < n; i++)
  {
	  for(int j = 0; j <= i ; j++)
	  {
		  std::cout << j+1;
	  }
	  std::cout << std::endl;
  }
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

13. 다음과 같이 출력하세요.
삼각형 높이 : 5
*
* *
* * *
* * * *
* * * * *

----------------------------------------------------------------------------

#include <iostream>

int main()
{
	int n{};

	std::cout << "n을 입력 : ";
	std::cin >> n;

	for (int i = 0; i < n; i++)
	{
		
		for (int k = 1; k <= n-i; k++)
		{
			std::cout << ' ';
		}
		for (int j = 0; j <= i; j++)
		{
			std::cout << "* ";
		}
		std::cout << std::endl;
	}
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

EXTRA 1 : 1부터 100 사이의 소수를 출력하세요.

----------------------------------------------------------------------------

#include <iostream>

int main()
{
	int i{};
	int k{};

	for (i = 2; i < 100; i++) // 순차적 a1 증가
	{
		for (k = 2; k < i; k++) // a1이 소수인지 검증
		{
			if (i % k == 0) // a1이 소수가 아닐 경우
			break; // 다음 차례 a1 확인하기
		}
		if (k == i)
		{
			std::cout << i << std::endl;
		}
	}
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

EXTRA 2 : 입력받은 두 숫자의 최소공배수, 최대공약수를 구해보세요.

memo : 유클리드 호제법 사용!

----------------------------------------------------------------------------

#include <iostream>

int main()
{
	int A{}, B{}, C{}, D{};

	std::cout << "A 와 B 차례대로 입력 : ";
	std::cin >> A >> B;

	D = A * B;

	while (B != 0)
	{
		C = A % B;
		A = B;
		B = C;
	}
	std::cout << "최대공약수는 : " << A << " 최소공배수는 : " << D / A;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

05_1_함수 (워터마크 있음)

3. 정수 a를 b로 나눈 몫을 구하는 함수와 나머지를 구하는 함수를 만들어 봅시다.

----------------------------------------------------------------------------

#include <iostream>

int Quotient(int a, int b)
{
	int z{};
	if (b!=0)
	{
		z = a / b;

		return z;
	}
	else
	{
		std::cout << "0으로 나누지마!" << std::endl;
		throw;
	}
}

int Remainder(int c, int d)
{
	int s{};
	if (d != 0)
	{
		s = c % d;

		return s;
	}
	else
	{
		std::cout << "0으로 나누지마!" << std::endl;
		throw;
	}
}


int main()
{
	int a{ 4 };
	int b{ 0 };

	std::cout << "몫 : "		<< Quotient(a,b) << std::endl;
	std::cout << "나머지 : "	<< Remainder(a, b) << std::endl;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

2. 달팽이 배열을 만들어 봅시다. ( 5 x 5 )

1 2 3 4 5
16 17 18 6
15 7
14 8
13 12 11 10 9

----------------------------------------------------------------------------

#include <iostream>

int main()
{

const int SIZE{ 5 };
int Array[SIZE][SIZE]{};

// row 행 인덱스, col 열 인덱스
int row{ 0 }, col{ -1 }, reverse{ 1 }, limit{ 0 }, tmp{ 1 };

// 변 크기 점점 줄이기 빌드업
for (int count = 1; count <= SIZE; count++)
{
	////행 고정, 열 증가, 배열에 숫자 증가
	for (int colplus = 0; colplus < SIZE - limit; colplus++)
	{
		col += reverse;
		Array[row][col] = tmp++;
	}

	// 사이즈 1칸 줄이기

	limit++;

	// 행 증가, 열 고정, 배열에 숫자 증가

	for (int rowplus = 0; rowplus < SIZE - limit; rowplus++)
	{
		row += reverse;
		Array[row][col] = tmp++;
	}

	// 역행 준비

	reverse = -reverse;
}

for (int i = 0; i < SIZE; i++)
{
	for (int j = 0; j < SIZE; j++)
	{
		std::cout << Array[i][j] << ' ';
	}
	std::cout << std::endl;
}

}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

3. 5x5 마방진을 만들어 봅시다.
가로, 세로, 대각선의 합이 동일한 행렬을 마방진이라 합니다.
시작은 1행의 가운데에서 출발
우상단 (행 감소, 열 증가) 이동
예외상황
행이 0보다 작으면 -> 제일 마지막 행
열이 너비보다 크면 -> 0열
이동한 곳에 값이 들어 있으면, 이전값 바로 아래로

----------------------------------------------------------------------------

#include <iostream>

int main()
{
	const int SIZE{ 5 };
	int array[SIZE][SIZE]{};
	int row{ 0 }, col{ 2 }, changeRow{}, changeCol{};

	for (int i = 1; i <= SIZE*SIZE; i++)
	{
		array[row][col] =i;

		changeRow = row--;
		changeCol = col++;

		if (row < 0)
		{
			row = 4;
		}
		
		if (col > 4)
		{
			col = 0;
		}

		if (array[row][col] != 0)
		{
			row = ++changeRow;
			col = changeCol;
		}
	}

	
	for (int i = 0; i < SIZE; i++)
	{
		for (int j = 0; j < SIZE; j++)
		{
			std::cout << array[i][j] << '\t';
		}
		std::cout << std::endl;
	}
}
